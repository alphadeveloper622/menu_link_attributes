<?php

/**
 * @file
 * Main file of Menu Link Attributes module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function menu_link_attributes_form_menu_link_content_menu_link_content_form_alter(&$form, FormStateInterface $form_state) {
  $attributes = \Drupal::config('menu_link_attributes.config')->get('attributes');
  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  $menu_link = $form_state->getFormObject()->getEntity();
  $menu_link_attributes = [];

  // Try to load plugin definition for getting attributes.
  try {
    $definition = $menu_link_manager->createInstance($menu_link->getPluginId());
    $menu_link_attributes =  $definition->getOptions()['attributes'] ?: [];
  }
  catch (PluginNotFoundException $e) {}

  $form['attributes'] = [
    '#type' => 'details',
    '#title' => t('Attributes'),
    '#weight' => -2,
    '#tree' => TRUE,
  ];

  // Iterate all defined attributes and create text field for them.
  foreach ($attributes as $attribute => $info) {
    // Provide default label / description for attributes.
    if (!$info['label']) {
      $info['label'] = str_replace('-', ' ', Unicode::ucfirst($attribute));
    }
    if (!$info['description']) {
      $info['description'] = t('Enter value for <code>@attribute</code> attribute.', ['@attribute' => $attribute]);
    }

    $form['attributes'][$attribute] = [
      '#type' => 'textfield',
      '#title' => $info['label'],
      '#description' => $info['description'],
      '#default_value' => isset($menu_link_attributes[$attribute]) ? $menu_link_attributes[$attribute] : '',
    ];
  }

  $form['actions']['submit']['#submit'][] = 'menu_link_attributes_menu_link_content_form_submit';
}

/**
 * Submit function for menu add / edit form.
 */
function menu_link_attributes_menu_link_content_form_submit($form, FormStateInterface $form_state) {
  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  $menu_link = $form_state->getFormObject()->getEntity();
  $options = ['attributes' => $form_state->getValue('attributes')];

  $menu_link_manager->updateDefinition($menu_link->getPluginId(), ['options' => $options]);
}

/**
 * Transform a text in attr|label|desc format into an array of attributes.
 *
 * @param string $attributes_text
 *   The attributes to be converted.
 * @return array
 *   The attributes as array.
 */
function menu_link_attributes_parse($attributes_text) {
  $lines = preg_split('/\n|\r/', $attributes_text, -1, PREG_SPLIT_NO_EMPTY);
  $lines = array_map('trim', $lines);
  $lines = array_filter($lines, 'strlen');
  $attributes = [];

  foreach ($lines as $line) {
    if (preg_match('/^([^\s\|]+)(?:\|([^\|]+))?(?:\|(.*))?/', $line, $matches)) {
      $attributes[$matches[1]] = [
        'label' => isset($matches[2]) ? $matches[2] : '',
        'description' => isset($matches[3]) ? $matches[3] : '',
      ];
    }
  }

  return $attributes;
}

/**
 * Transform an array of attributes into a string.
 *
 * @param array $attributes
 *   The attributes to be converted.
 * @return string
 *   The attributes as string.
 */
function menu_link_attributes_split($attributes) {
  $attributes_text = '';

  // Iterate all attributes and build string.
  foreach ($attributes as $attribute => $info) {
    $attributes_text .= $attribute;

    if ($info['label']) {
      $attributes_text .= '|' . $info['label'];
    }

    if ($info['description']) {
      $attributes_text .= '|' . $info['description'];
    }

    $attributes_text .= "\n";
  }

  return $attributes_text;
}
